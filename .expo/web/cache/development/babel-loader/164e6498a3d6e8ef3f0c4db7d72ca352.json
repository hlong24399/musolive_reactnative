{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { device, gStyle, images, colors, fonts } from \"../constants\";\nimport LineItemCategory from \"../components/LineItemCategory\";\nimport moreOptions from \"../mockdata/menuMoreOptions.json\";\n\nvar ModalMoreOptions = function ModalMoreOptions(_ref) {\n  var navigation = _ref.navigation,\n      setToggleTabBar = _ref.screenProps.setToggleTabBar;\n  var album = navigation.getParam('album');\n  return React.createElement(React.Fragment, null, React.createElement(SafeAreaView, {\n    style: styles.containerSafeArea\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      navigation.goBack();\n      setToggleTabBar();\n    }\n  }, React.createElement(View, {\n    style: styles.containerButton\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Cancel\")))), React.createElement(ScrollView, {\n    contentContainerStyle: [gStyle.flex1, gStyle.pB80],\n    showsVerticalScrollIndicator: false,\n    style: [gStyle.container, styles.transparent]\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.containerImage\n  }, React.createElement(Image, {\n    source: images[album.image],\n    style: styles.image\n  })), React.createElement(Text, {\n    ellipsizeMode: \"tail\",\n    numberOfLines: 1,\n    style: styles.title\n  }, album.title), React.createElement(Text, {\n    style: styles.albumInfo\n  }, \"Album by \" + album.artist + \" \\xB7 \" + album.released)), Object.keys(moreOptions).map(function (index) {\n    var item = moreOptions[index];\n    return React.createElement(LineItemCategory, {\n      key: item.id,\n      disableRightSide: true,\n      icon: item.icon,\n      iconLibrary: item.lib,\n      onPress: function onPress() {\n        return null;\n      },\n      title: item.title\n    });\n  })));\n};\n\nModalMoreOptions.propTypes = {\n  navigation: PropTypes.object.isRequired,\n  screenProps: PropTypes.object.isRequired\n};\nvar styles = StyleSheet.create({\n  containerSafeArea: _objectSpread(_objectSpread({}, gStyle.containerAbsolute), {}, {\n    backgroundColor: colors.blackBlur\n  }),\n  containerButton: _objectSpread(_objectSpread({}, gStyle.flexCenter), gStyle.spacer6),\n  buttonText: {\n    color: colors.white,\n    fontSize: 18\n  },\n  transparent: {\n    backgroundColor: 'transparent'\n  },\n  container: {\n    alignItems: 'center',\n    paddingTop: device.iPhoneNotch ? 94 : 50\n  },\n  containerImage: {\n    shadowColor: colors.black,\n    shadowOffset: {\n      height: 8,\n      width: 0\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 6\n  },\n  image: {\n    height: 148,\n    marginBottom: 16,\n    width: 148\n  },\n  title: {\n    color: colors.white,\n    fontFamily: fonts.spotifyBold,\n    fontSize: 20,\n    marginBottom: 8,\n    paddingHorizontal: 24,\n    textAlign: 'center'\n  },\n  albumInfo: {\n    color: colors.greyInactive,\n    fontFamily: fonts.spotifyRegular,\n    fontSize: 12,\n    marginBottom: 48\n  }\n});\nexport default ModalMoreOptions;","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/screens/ModalMoreOptions.js"],"names":["React","PropTypes","device","gStyle","images","colors","fonts","LineItemCategory","moreOptions","ModalMoreOptions","navigation","setToggleTabBar","screenProps","album","getParam","styles","containerSafeArea","goBack","containerButton","buttonText","flex1","pB80","container","transparent","containerImage","image","title","albumInfo","artist","released","Object","keys","map","index","item","id","icon","lib","propTypes","object","isRequired","StyleSheet","create","containerAbsolute","backgroundColor","blackBlur","flexCenter","spacer6","color","white","fontSize","alignItems","paddingTop","iPhoneNotch","shadowColor","black","shadowOffset","height","width","shadowOpacity","shadowRadius","marginBottom","fontFamily","spotifyBold","paddingHorizontal","textAlign","greyInactive","spotifyRegular"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  View,\n  TouchableWithoutFeedback,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  Image\n} from 'react-native';\nimport { device, gStyle, images, colors, fonts } from '../constants';\n\n// components\nimport LineItemCategory from '../components/LineItemCategory';\n\n// mock data\nimport moreOptions from '../mockdata/menuMoreOptions.json';\n\nconst ModalMoreOptions = ({ navigation, screenProps: { setToggleTabBar } }) => {\n  const album = navigation.getParam('album');\n\n  return (\n    <React.Fragment>\n      <SafeAreaView style={styles.containerSafeArea}>\n        <TouchableWithoutFeedback\n          onPress={() => {\n            navigation.goBack();\n            setToggleTabBar();\n          }}\n        >\n          <View style={styles.containerButton}>\n            <Text style={styles.buttonText}>Cancel</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </SafeAreaView>\n\n      <ScrollView\n        contentContainerStyle={[gStyle.flex1, gStyle.pB80]}\n        showsVerticalScrollIndicator={false}\n        style={[gStyle.container, styles.transparent]}\n      >\n        <View style={styles.container}>\n          <View style={styles.containerImage}>\n            <Image source={images[album.image]} style={styles.image} />\n          </View>\n          <Text ellipsizeMode=\"tail\" numberOfLines={1} style={styles.title}>\n            {album.title}\n          </Text>\n          <Text style={styles.albumInfo}>\n            {`Album by ${album.artist} · ${album.released}`}\n          </Text>\n        </View>\n\n        {Object.keys(moreOptions).map((index) => {\n          const item = moreOptions[index];\n\n          return (\n            <LineItemCategory\n              key={item.id}\n              disableRightSide\n              icon={item.icon}\n              iconLibrary={item.lib}\n              onPress={() => null}\n              title={item.title}\n            />\n          );\n        })}\n      </ScrollView>\n    </React.Fragment>\n  );\n};\n\nModalMoreOptions.propTypes = {\n  // required\n  navigation: PropTypes.object.isRequired,\n  screenProps: PropTypes.object.isRequired\n};\n\nconst styles = StyleSheet.create({\n  containerSafeArea: {\n    ...gStyle.containerAbsolute,\n    backgroundColor: colors.blackBlur\n  },\n  containerButton: {\n    ...gStyle.flexCenter,\n    ...gStyle.spacer6\n  },\n  buttonText: {\n    color: colors.white,\n    fontSize: 18\n  },\n  transparent: {\n    backgroundColor: 'transparent'\n  },\n  container: {\n    alignItems: 'center',\n    paddingTop: device.iPhoneNotch ? 94 : 50\n  },\n  containerImage: {\n    shadowColor: colors.black,\n    shadowOffset: { height: 8, width: 0 },\n    shadowOpacity: 0.8,\n    shadowRadius: 6\n  },\n  image: {\n    height: 148,\n    marginBottom: 16,\n    width: 148\n  },\n  title: {\n    color: colors.white,\n    fontFamily: fonts.spotifyBold,\n    fontSize: 20,\n    marginBottom: 8,\n    paddingHorizontal: 24,\n    textAlign: 'center'\n  },\n  albumInfo: {\n    color: colors.greyInactive,\n    fontFamily: fonts.spotifyRegular,\n    fontSize: 12,\n    marginBottom: 48\n  }\n});\n\nexport default ModalMoreOptions;\n"]},"metadata":{},"sourceType":"module"}