{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather } from '@expo/vector-icons';\nimport { BlurView } from 'expo-blur';\nimport { colors, device, gStyle, images } from \"../constants\";\nimport LinearGradient from \"../components/LinearGradient\";\nimport LineItemSong from \"../components/LineItemSong\";\nimport TouchIcon from \"../components/TouchIcon\";\nimport TouchText from \"../components/TouchText\";\nimport albums from \"../mockdata/albums\";\n\nvar Album = function (_React$Component) {\n  _inherits(Album, _React$Component);\n\n  var _super = _createSuper(Album);\n\n  function Album() {\n    var _this;\n\n    _classCallCheck(this, Album);\n\n    _this = _super.call(this);\n    _this.state = {\n      album: null,\n      downloaded: false,\n      scrollY: new Animated.Value(0),\n      song: null,\n      title: null\n    };\n    _this.toggleDownloaded = _this.toggleDownloaded.bind(_assertThisInitialized(_this));\n    _this.changeSong = _this.changeSong.bind(_assertThisInitialized(_this));\n    _this.toggleBlur = _this.toggleBlur.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Album, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          screenProps = _this$props.screenProps;\n      var currentSongData = screenProps.currentSongData;\n      var albumTitle = navigation.getParam('title', 'Extraordinary Machine');\n      this.setState({\n        album: albums[albumTitle] || null,\n        song: currentSongData.title,\n        title: albumTitle\n      });\n    }\n  }, {\n    key: \"toggleDownloaded\",\n    value: function toggleDownloaded(val) {\n      var _this2 = this;\n\n      if (device.web) {\n        this.setState({\n          downloaded: val\n        });\n        return;\n      }\n\n      if (val === false) {\n        Alert.alert('Remove from Downloads?', \"You won't be able to play this offline.\", [{\n          text: 'Cancel'\n        }, {\n          onPress: function onPress() {\n            _this2.setState({\n              downloaded: false\n            });\n          },\n          text: 'Remove'\n        }], {\n          cancelable: false\n        });\n      } else {\n        this.setState({\n          downloaded: val\n        });\n      }\n    }\n  }, {\n    key: \"changeSong\",\n    value: function changeSong(songData) {\n      var changeSong = this.props.screenProps.changeSong;\n      changeSong(songData);\n      this.setState({\n        song: songData.title\n      });\n    }\n  }, {\n    key: \"toggleBlur\",\n    value: function toggleBlur() {\n      var setToggleTabBar = this.props.screenProps.setToggleTabBar;\n      setToggleTabBar();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          navigation = _this$props2.navigation,\n          _this$props2$screenPr = _this$props2.screenProps,\n          toggleTabBarState = _this$props2$screenPr.toggleTabBarState,\n          setToggleTabBar = _this$props2$screenPr.setToggleTabBar;\n      var _this$state = this.state,\n          album = _this$state.album,\n          downloaded = _this$state.downloaded,\n          scrollY = _this$state.scrollY,\n          song = _this$state.song,\n          title = _this$state.title;\n\n      if (album === null) {\n        return React.createElement(View, {\n          style: [gStyle.container, gStyle.flexCenter]\n        }, React.createElement(Text, {\n          style: {\n            color: colors.white\n          }\n        }, \"Album: \" + title));\n      }\n\n      var stickyArray = device.web ? [] : [0];\n      var headingRange = device.web ? [140, 200] : [230, 280];\n      var shuffleRange = device.web ? [40, 80] : [40, 80];\n      var opacityHeading = scrollY.interpolate({\n        inputRange: headingRange,\n        outputRange: [0, 1],\n        extrapolate: 'clamp'\n      });\n      var opacityShuffle = scrollY.interpolate({\n        inputRange: shuffleRange,\n        outputRange: [0, 1],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(View, {\n        style: gStyle.container\n      }, toggleTabBarState ? React.createElement(BlurView, {\n        intensity: 99,\n        style: styles.blurview,\n        tint: \"dark\"\n      }) : null, React.createElement(View, {\n        style: styles.containerHeader\n      }, React.createElement(Animated.View, {\n        style: [styles.headerLinear, {\n          opacity: opacityHeading\n        }]\n      }, React.createElement(LinearGradient, {\n        fill: album.backgroundColor,\n        height: 89\n      })), React.createElement(View, {\n        style: styles.header\n      }, React.createElement(TouchIcon, {\n        icon: React.createElement(Feather, {\n          color: colors.white,\n          name: \"chevron-left\"\n        }),\n        onPress: function onPress() {\n          return navigation.goBack(null);\n        }\n      }), React.createElement(Animated.View, {\n        style: {\n          opacity: opacityShuffle\n        }\n      }, React.createElement(Text, {\n        style: styles.headerTitle\n      }, album.title)), React.createElement(TouchIcon, {\n        icon: React.createElement(Feather, {\n          color: colors.white,\n          name: \"more-horizontal\"\n        }),\n        onPress: function onPress() {\n          setToggleTabBar();\n          navigation.navigate('ModalMoreOptions', {\n            album: album\n          });\n        }\n      }))), React.createElement(View, {\n        style: styles.containerFixed\n      }, React.createElement(View, {\n        style: styles.containerLinear\n      }, React.createElement(LinearGradient, {\n        fill: album.backgroundColor\n      })), React.createElement(View, {\n        style: styles.containerImage\n      }, React.createElement(Image, {\n        source: images[album.image],\n        style: styles.image\n      })), React.createElement(View, {\n        style: styles.containerTitle\n      }, React.createElement(Text, {\n        ellipsizeMode: \"tail\",\n        numberOfLines: 1,\n        style: styles.title\n      }, album.title)), React.createElement(View, {\n        style: styles.containerAlbum\n      }, React.createElement(Text, {\n        style: styles.albumInfo\n      }, \"Album by \" + album.artist + \" \\xB7 \" + album.released))), React.createElement(Animated.ScrollView, {\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        scrollEventThrottle: 16,\n        showsVerticalScrollIndicator: false,\n        stickyHeaderIndices: stickyArray,\n        style: styles.containerScroll\n      }, React.createElement(View, {\n        style: styles.containerSticky\n      }, React.createElement(Animated.View, {\n        style: [styles.containerStickyLinear, {\n          opacity: opacityShuffle\n        }]\n      }, React.createElement(LinearGradient, {\n        fill: colors.black20,\n        height: 50\n      })), React.createElement(View, {\n        style: styles.containerShuffle\n      }, React.createElement(TouchText, {\n        onPress: function onPress() {\n          return null;\n        },\n        style: styles.btn,\n        styleText: styles.btnText,\n        text: \"Shuffle Play\"\n      }))), React.createElement(View, {\n        style: styles.containerSongs\n      }, React.createElement(View, {\n        style: styles.row\n      }, React.createElement(Text, {\n        style: styles.downloadText\n      }, downloaded ? 'Downloaded' : 'Download'), React.createElement(Switch, {\n        trackColor: colors.greySwitchBorder,\n        onValueChange: function onValueChange(val) {\n          return _this3.toggleDownloaded(val);\n        },\n        value: downloaded\n      })), album.tracks && album.tracks.map(function (track, index) {\n        return React.createElement(LineItemSong, {\n          active: song === track.title,\n          downloaded: downloaded,\n          key: index.toString(),\n          onPress: _this3.changeSong,\n          songData: {\n            album: album.title,\n            artist: album.artist,\n            image: album.image,\n            length: track.seconds,\n            title: track.title\n          }\n        });\n      })), React.createElement(View, {\n        style: gStyle.spacer16\n      })));\n    }\n  }]);\n\n  return Album;\n}(React.Component);\n\nAlbum.propTypes = {\n  navigation: PropTypes.object.isRequired,\n  screenProps: PropTypes.object.isRequired\n};\nvar styles = StyleSheet.create({\n  blurview: _objectSpread(_objectSpread({}, StyleSheet.absoluteFill), {}, {\n    zIndex: 101\n  }),\n  containerHeader: {\n    height: 89,\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    zIndex: 100\n  },\n  headerLinear: {\n    height: 89,\n    width: '100%'\n  },\n  header: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 24,\n    paddingTop: device.iPhoneNotch ? 48 : 24,\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  headerTitle: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold16), {}, {\n    color: colors.white,\n    marginTop: 2,\n    paddingHorizontal: 8,\n    textAlign: 'center',\n    width: device.width - 100\n  }),\n  containerFixed: {\n    alignItems: 'center',\n    paddingTop: device.iPhoneNotch ? 94 : 60,\n    position: 'absolute',\n    width: '100%'\n  },\n  containerLinear: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    zIndex: device.web ? 5 : 0\n  },\n  containerImage: {\n    shadowColor: colors.black,\n    shadowOffset: {\n      height: 8,\n      width: 0\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 6,\n    zIndex: device.web ? 20 : 0\n  },\n  image: {\n    height: 148,\n    marginBottom: device.web ? 0 : 16,\n    width: 148\n  },\n  containerTitle: {\n    marginTop: device.web ? 8 : 0,\n    zIndex: device.web ? 20 : 0\n  },\n  title: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold20), {}, {\n    color: colors.white,\n    marginBottom: 8,\n    paddingHorizontal: 24,\n    textAlign: 'center'\n  }),\n  containerAlbum: {\n    zIndex: device.web ? 20 : 0\n  },\n  albumInfo: _objectSpread(_objectSpread({}, gStyle.textSpotify12), {}, {\n    color: colors.greyInactive,\n    marginBottom: 48\n  }),\n  containerScroll: {\n    paddingTop: 89\n  },\n  containerSticky: {\n    marginTop: device.iPhoneNotch ? 238 : 194\n  },\n  containerShuffle: {\n    alignItems: 'center',\n    height: 50,\n    shadowColor: colors.blackBg,\n    shadowOffset: {\n      height: -10,\n      width: 0\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 20\n  },\n  containerStickyLinear: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  btn: {\n    backgroundColor: colors.brandPrimary,\n    borderRadius: 25,\n    height: 50,\n    width: 220\n  },\n  btnText: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold16), {}, {\n    color: colors.white,\n    letterSpacing: 1,\n    textTransform: 'uppercase'\n  }),\n  containerSongs: {\n    alignItems: 'center',\n    backgroundColor: colors.blackBg,\n    minHeight: 540\n  },\n  row: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    width: '100%'\n  },\n  downloadText: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold18), {}, {\n    color: colors.white\n  })\n});\nexport default Album;","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/screens/Album.js"],"names":["React","PropTypes","Feather","BlurView","colors","device","gStyle","images","LinearGradient","LineItemSong","TouchIcon","TouchText","albums","Album","state","album","downloaded","scrollY","Animated","Value","song","title","toggleDownloaded","bind","changeSong","toggleBlur","props","navigation","screenProps","currentSongData","albumTitle","getParam","setState","val","web","Alert","alert","text","onPress","cancelable","songData","setToggleTabBar","toggleTabBarState","container","flexCenter","color","white","stickyArray","headingRange","shuffleRange","opacityHeading","interpolate","inputRange","outputRange","extrapolate","opacityShuffle","styles","blurview","containerHeader","headerLinear","opacity","backgroundColor","header","goBack","headerTitle","navigate","containerFixed","containerLinear","containerImage","image","containerTitle","containerAlbum","albumInfo","artist","released","event","nativeEvent","contentOffset","y","useNativeDriver","containerScroll","containerSticky","containerStickyLinear","black20","containerShuffle","btn","btnText","containerSongs","row","downloadText","greySwitchBorder","tracks","map","track","index","toString","length","seconds","spacer16","Component","propTypes","object","isRequired","StyleSheet","create","absoluteFill","zIndex","height","position","top","width","alignItems","flexDirection","justifyContent","paddingHorizontal","paddingTop","iPhoneNotch","textSpotifyBold16","marginTop","textAlign","shadowColor","black","shadowOffset","shadowOpacity","shadowRadius","marginBottom","textSpotifyBold20","textSpotify12","greyInactive","blackBg","brandPrimary","borderRadius","letterSpacing","textTransform","minHeight","padding","textSpotifyBold18"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Alert,\n  Animated,\n  Image,\n  StyleSheet,\n  Switch,\n  Text,\n  View\n} from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { BlurView } from 'expo-blur';\nimport { colors, device, gStyle, images } from '../constants';\n\n// components\nimport LinearGradient from '../components/LinearGradient';\nimport LineItemSong from '../components/LineItemSong';\nimport TouchIcon from '../components/TouchIcon';\nimport TouchText from '../components/TouchText';\n\n// mock data\nimport albums from '../mockdata/albums';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      album: null,\n      downloaded: false,\n      scrollY: new Animated.Value(0),\n      song: null,\n      title: null\n    };\n\n    this.toggleDownloaded = this.toggleDownloaded.bind(this);\n    this.changeSong = this.changeSong.bind(this);\n    this.toggleBlur = this.toggleBlur.bind(this);\n  }\n\n  componentDidMount() {\n    const { navigation, screenProps } = this.props;\n\n    const { currentSongData } = screenProps;\n    // const albumTitle = navigation.getParam('title', 'ALBUM NOT FOUND?!');\n    const albumTitle = navigation.getParam('title', 'Extraordinary Machine');\n\n    this.setState({\n      album: albums[albumTitle] || null,\n      song: currentSongData.title,\n      title: albumTitle\n    });\n  }\n\n  toggleDownloaded(val) {\n    // if web\n    if (device.web) {\n      this.setState({\n        downloaded: val\n      });\n\n      return;\n    }\n\n    // remove downloads alert\n    if (val === false) {\n      Alert.alert(\n        'Remove from Downloads?',\n        \"You won't be able to play this offline.\",\n        [\n          { text: 'Cancel' },\n          {\n            onPress: () => {\n              this.setState({\n                downloaded: false\n              });\n            },\n            text: 'Remove'\n          }\n        ],\n        { cancelable: false }\n      );\n    } else {\n      this.setState({\n        downloaded: val\n      });\n    }\n  }\n\n  changeSong(songData) {\n    const {\n      screenProps: { changeSong }\n    } = this.props;\n\n    changeSong(songData);\n\n    this.setState({\n      song: songData.title\n    });\n  }\n\n  toggleBlur() {\n    const {\n      screenProps: { setToggleTabBar }\n    } = this.props;\n\n    setToggleTabBar();\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { toggleTabBarState, setToggleTabBar }\n    } = this.props;\n    const { album, downloaded, scrollY, song, title } = this.state;\n\n    // album data not set?\n    if (album === null) {\n      return (\n        <View style={[gStyle.container, gStyle.flexCenter]}>\n          <Text style={{ color: colors.white }}>{`Album: ${title}`}</Text>\n        </View>\n      );\n    }\n\n    const stickyArray = device.web ? [] : [0];\n    const headingRange = device.web ? [140, 200] : [230, 280];\n    const shuffleRange = device.web ? [40, 80] : [40, 80];\n\n    const opacityHeading = scrollY.interpolate({\n      inputRange: headingRange,\n      outputRange: [0, 1],\n      extrapolate: 'clamp'\n    });\n\n    const opacityShuffle = scrollY.interpolate({\n      inputRange: shuffleRange,\n      outputRange: [0, 1],\n      extrapolate: 'clamp'\n    });\n\n    return (\n      <View style={gStyle.container}>\n        {toggleTabBarState ? (\n          <BlurView intensity={99} style={styles.blurview} tint=\"dark\" />\n        ) : null}\n\n        <View style={styles.containerHeader}>\n          <Animated.View\n            style={[styles.headerLinear, { opacity: opacityHeading }]}\n          >\n            <LinearGradient fill={album.backgroundColor} height={89} />\n          </Animated.View>\n          <View style={styles.header}>\n            <TouchIcon\n              icon={<Feather color={colors.white} name=\"chevron-left\" />}\n              onPress={() => navigation.goBack(null)}\n            />\n            <Animated.View style={{ opacity: opacityShuffle }}>\n              <Text style={styles.headerTitle}>{album.title}</Text>\n            </Animated.View>\n            <TouchIcon\n              icon={<Feather color={colors.white} name=\"more-horizontal\" />}\n              onPress={() => {\n                setToggleTabBar();\n\n                navigation.navigate('ModalMoreOptions', {\n                  album\n                });\n              }}\n            />\n          </View>\n        </View>\n\n        <View style={styles.containerFixed}>\n          <View style={styles.containerLinear}>\n            <LinearGradient fill={album.backgroundColor} />\n          </View>\n          <View style={styles.containerImage}>\n            <Image source={images[album.image]} style={styles.image} />\n          </View>\n          <View style={styles.containerTitle}>\n            <Text ellipsizeMode=\"tail\" numberOfLines={1} style={styles.title}>\n              {album.title}\n            </Text>\n          </View>\n          <View style={styles.containerAlbum}>\n            <Text style={styles.albumInfo}>\n              {`Album by ${album.artist} · ${album.released}`}\n            </Text>\n          </View>\n        </View>\n\n        <Animated.ScrollView\n          onScroll={Animated.event(\n            [{ nativeEvent: { contentOffset: { y: scrollY } } }],\n            { useNativeDriver: true }\n          )}\n          scrollEventThrottle={16}\n          showsVerticalScrollIndicator={false}\n          stickyHeaderIndices={stickyArray}\n          style={styles.containerScroll}\n        >\n          <View style={styles.containerSticky}>\n            <Animated.View\n              style={[\n                styles.containerStickyLinear,\n                { opacity: opacityShuffle }\n              ]}\n            >\n              <LinearGradient fill={colors.black20} height={50} />\n            </Animated.View>\n            <View style={styles.containerShuffle}>\n              <TouchText\n                onPress={() => null}\n                style={styles.btn}\n                styleText={styles.btnText}\n                text=\"Shuffle Play\"\n              />\n            </View>\n          </View>\n          <View style={styles.containerSongs}>\n            <View style={styles.row}>\n              <Text style={styles.downloadText}>\n                {downloaded ? 'Downloaded' : 'Download'}\n              </Text>\n              <Switch\n                trackColor={colors.greySwitchBorder}\n                onValueChange={(val) => this.toggleDownloaded(val)}\n                value={downloaded}\n              />\n            </View>\n\n            {album.tracks &&\n              album.tracks.map((track, index) => (\n                <LineItemSong\n                  active={song === track.title}\n                  downloaded={downloaded}\n                  key={index.toString()}\n                  onPress={this.changeSong}\n                  songData={{\n                    album: album.title,\n                    artist: album.artist,\n                    image: album.image,\n                    length: track.seconds,\n                    title: track.title\n                  }}\n                />\n              ))}\n          </View>\n          <View style={gStyle.spacer16} />\n        </Animated.ScrollView>\n      </View>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  // required\n  navigation: PropTypes.object.isRequired,\n  screenProps: PropTypes.object.isRequired\n};\n\nconst styles = StyleSheet.create({\n  blurview: {\n    ...StyleSheet.absoluteFill,\n    zIndex: 101\n  },\n  containerHeader: {\n    height: 89,\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    zIndex: 100\n  },\n  headerLinear: {\n    height: 89,\n    width: '100%'\n  },\n  header: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 24,\n    paddingTop: device.iPhoneNotch ? 48 : 24,\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  headerTitle: {\n    ...gStyle.textSpotifyBold16,\n    color: colors.white,\n    marginTop: 2,\n    paddingHorizontal: 8,\n    textAlign: 'center',\n    width: device.width - 100\n  },\n  containerFixed: {\n    alignItems: 'center',\n    paddingTop: device.iPhoneNotch ? 94 : 60,\n    position: 'absolute',\n    width: '100%'\n  },\n  containerLinear: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    zIndex: device.web ? 5 : 0\n  },\n  containerImage: {\n    shadowColor: colors.black,\n    shadowOffset: { height: 8, width: 0 },\n    shadowOpacity: 0.8,\n    shadowRadius: 6,\n    zIndex: device.web ? 20 : 0\n  },\n  image: {\n    height: 148,\n    marginBottom: device.web ? 0 : 16,\n    width: 148\n  },\n  containerTitle: {\n    marginTop: device.web ? 8 : 0,\n    zIndex: device.web ? 20 : 0\n  },\n  title: {\n    ...gStyle.textSpotifyBold20,\n    color: colors.white,\n    marginBottom: 8,\n    paddingHorizontal: 24,\n    textAlign: 'center'\n  },\n  containerAlbum: {\n    zIndex: device.web ? 20 : 0\n  },\n  albumInfo: {\n    ...gStyle.textSpotify12,\n    color: colors.greyInactive,\n    marginBottom: 48\n  },\n  containerScroll: {\n    paddingTop: 89\n  },\n  containerSticky: {\n    marginTop: device.iPhoneNotch ? 238 : 194\n  },\n  containerShuffle: {\n    alignItems: 'center',\n    height: 50,\n    shadowColor: colors.blackBg,\n    shadowOffset: { height: -10, width: 0 },\n    shadowOpacity: 0.2,\n    shadowRadius: 20\n  },\n  containerStickyLinear: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  btn: {\n    backgroundColor: colors.brandPrimary,\n    borderRadius: 25,\n    height: 50,\n    width: 220\n  },\n  btnText: {\n    ...gStyle.textSpotifyBold16,\n    color: colors.white,\n    letterSpacing: 1,\n    textTransform: 'uppercase'\n  },\n  containerSongs: {\n    alignItems: 'center',\n    backgroundColor: colors.blackBg,\n    minHeight: 540\n  },\n  row: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    width: '100%'\n  },\n  downloadText: {\n    ...gStyle.textSpotifyBold18,\n    color: colors.white\n  }\n});\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}