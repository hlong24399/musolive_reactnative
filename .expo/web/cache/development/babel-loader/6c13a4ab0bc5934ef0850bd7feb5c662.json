{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather, Ionicons } from '@expo/vector-icons';\nimport { colors, gStyle } from \"../constants\";\n\nvar LineItemSong = function LineItemSong(_ref) {\n  var active = _ref.active,\n      downloaded = _ref.downloaded,\n      _onPress = _ref.onPress,\n      songData = _ref.songData;\n  var activeColor = active ? colors.brandPrimary : colors.white;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: gStyle.activeOpacity,\n    onPress: function onPress() {\n      return _onPress(songData);\n    },\n    style: gStyle.flex5\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: activeColor\n    }]\n  }, songData.title), React.createElement(View, {\n    style: gStyle.flexRow\n  }, downloaded && React.createElement(View, {\n    style: styles.circleDownloaded\n  }, React.createElement(Ionicons, {\n    color: colors.blackBg,\n    name: \"arrow-down\",\n    size: 14\n  })), React.createElement(Text, {\n    style: styles.artist\n  }, songData.artist))), React.createElement(View, {\n    style: styles.containerRight\n  }, React.createElement(Feather, {\n    color: colors.greyLight,\n    name: \"more-horizontal\",\n    size: 20\n  })));\n};\n\nLineItemSong.defaultProps = {\n  active: false,\n  downloaded: false\n};\nLineItemSong.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  songData: PropTypes.shape({\n    album: PropTypes.string.isRequired,\n    artist: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    length: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n  }).isRequired,\n  active: PropTypes.bool,\n  downloaded: PropTypes.bool\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    width: '100%'\n  },\n  title: _objectSpread(_objectSpread({}, gStyle.textSpotify16), {}, {\n    color: colors.white,\n    marginBottom: 4\n  }),\n  circleDownloaded: {\n    alignItems: 'center',\n    backgroundColor: colors.brandPrimary,\n    borderRadius: 7,\n    height: 14,\n    justifyContent: 'center',\n    marginRight: 8,\n    width: 14\n  },\n  artist: _objectSpread(_objectSpread({}, gStyle.textSpotify12), {}, {\n    color: colors.greyInactive\n  }),\n  containerRight: {\n    alignItems: 'flex-end',\n    flex: 1\n  }\n});\nexport default LineItemSong;","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/components/LineItemSong.js"],"names":["React","PropTypes","Feather","Ionicons","colors","gStyle","LineItemSong","active","downloaded","onPress","songData","activeColor","brandPrimary","white","styles","container","activeOpacity","flex5","title","color","flexRow","circleDownloaded","blackBg","artist","containerRight","greyLight","defaultProps","propTypes","func","isRequired","shape","album","string","image","length","number","bool","StyleSheet","create","alignItems","flexDirection","justifyContent","padding","width","textSpotify16","marginBottom","backgroundColor","borderRadius","height","marginRight","textSpotify12","greyInactive","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { Feather, Ionicons } from '@expo/vector-icons';\nimport { colors, gStyle } from '../constants';\n\nconst LineItemSong = ({ active, downloaded, onPress, songData }) => {\n  const activeColor = active ? colors.brandPrimary : colors.white;\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        activeOpacity={gStyle.activeOpacity}\n        onPress={() => onPress(songData)}\n        style={gStyle.flex5}\n      >\n        <Text style={[styles.title, { color: activeColor }]}>\n          {songData.title}\n        </Text>\n        <View style={gStyle.flexRow}>\n          {downloaded && (\n            <View style={styles.circleDownloaded}>\n              <Ionicons color={colors.blackBg} name=\"arrow-down\" size={14} />\n            </View>\n          )}\n          <Text style={styles.artist}>{songData.artist}</Text>\n        </View>\n      </TouchableOpacity>\n\n      <View style={styles.containerRight}>\n        <Feather color={colors.greyLight} name=\"more-horizontal\" size={20} />\n      </View>\n    </View>\n  );\n};\n\nLineItemSong.defaultProps = {\n  active: false,\n  downloaded: false\n};\n\nLineItemSong.propTypes = {\n  // required\n  onPress: PropTypes.func.isRequired,\n  songData: PropTypes.shape({\n    album: PropTypes.string.isRequired,\n    artist: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    length: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n  }).isRequired,\n\n  // optional\n  active: PropTypes.bool,\n  downloaded: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    width: '100%'\n  },\n  title: {\n    ...gStyle.textSpotify16,\n    color: colors.white,\n    marginBottom: 4\n  },\n  circleDownloaded: {\n    alignItems: 'center',\n    backgroundColor: colors.brandPrimary,\n    borderRadius: 7,\n    height: 14,\n    justifyContent: 'center',\n    marginRight: 8,\n    width: 14\n  },\n  artist: {\n    ...gStyle.textSpotify12,\n    color: colors.greyInactive\n  },\n  containerRight: {\n    alignItems: 'flex-end',\n    flex: 1\n  }\n});\n\nexport default LineItemSong;\n"]},"metadata":{},"sourceType":"module"}