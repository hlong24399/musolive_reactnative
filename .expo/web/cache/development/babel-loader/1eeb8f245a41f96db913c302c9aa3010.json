{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withNavigation } from 'react-navigation';\nimport { BlurView } from 'expo-blur';\nimport { Feather } from '@expo/vector-icons';\nimport { colors, device, gStyle } from \"../constants\";\nimport TouchIcon from \"./TouchIcon\";\n\nvar ScreenHeader = function ScreenHeader(_ref) {\n  var navigation = _ref.navigation,\n      showBack = _ref.showBack,\n      title = _ref.title;\n  return React.createElement(BlurView, {\n    tint: \"dark\",\n    intensity: 95,\n    style: styles.container\n  }, showBack && React.createElement(View, {\n    style: styles.left\n  }, React.createElement(TouchIcon, {\n    icon: React.createElement(Feather, {\n      color: colors.white,\n      name: \"chevron-left\"\n    }),\n    onPress: function onPress() {\n      return navigation.goBack(null);\n    }\n  })), React.createElement(View, {\n    style: styles.containerText\n  }, React.createElement(Text, {\n    style: styles.text\n  }, title)), showBack && React.createElement(View, {\n    style: gStyle.flex1\n  }));\n};\n\nScreenHeader.defaultProps = {\n  showBack: false\n};\nScreenHeader.propTypes = {\n  navigation: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  showBack: PropTypes.bool\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 16,\n    paddingHorizontal: 24,\n    paddingTop: device.iPhoneNotch ? 48 : 24\n  },\n  containerText: _objectSpread(_objectSpread({}, gStyle.flex5), {}, {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }),\n  text: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold16), {}, {\n    color: colors.white,\n    textAlign: 'center'\n  }),\n  left: _objectSpread(_objectSpread({}, gStyle.flex1), {}, {\n    alignItems: 'flex-start'\n  })\n});\nexport default withNavigation(ScreenHeader);","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/components/ScreenHeader.js"],"names":["React","PropTypes","withNavigation","BlurView","Feather","colors","device","gStyle","TouchIcon","ScreenHeader","navigation","showBack","title","styles","container","left","white","goBack","containerText","text","flex1","defaultProps","propTypes","object","isRequired","string","bool","StyleSheet","create","alignItems","flexDirection","justifyContent","paddingBottom","paddingHorizontal","paddingTop","iPhoneNotch","flex5","textSpotifyBold16","color","textAlign"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB;AAGA,OAAOC,SAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,QAAf,QAAeA,QAAf;AAAA,MAAyBC,KAAzB,QAAyBA,KAAzB;AAAA,SACnB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAEC,MAAM,CAACC;AAAnD,KACGH,QAAQ,IACP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACE;AAApB,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEV,MAAM,CAACW,KAAvB;AAA8B,MAAA,IAAI,EAAC;AAAnC,MADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACO,MAAX,CAAkB,IAAlB,CAAN;AAAA;AAFX,IADF,CAFJ,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,KAA2BP,KAA3B,CADF,CAVF,EAcGD,QAAQ,IAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACa;AAApB,IAdf,CADmB;AAAA,CAArB;;AAmBAX,YAAY,CAACY,YAAb,GAA4B;AAC1BV,EAAAA,QAAQ,EAAE;AADgB,CAA5B;AAIAF,YAAY,CAACa,SAAb,GAAyB;AAEvBZ,EAAAA,UAAU,EAAET,SAAS,CAACsB,MAAV,CAAiBC,UAFN;AAGvBZ,EAAAA,KAAK,EAAEX,SAAS,CAACwB,MAAV,CAAiBD,UAHD;AAMvBb,EAAAA,QAAQ,EAAEV,SAAS,CAACyB;AANG,CAAzB;AASA,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAE,eAHP;AAITC,IAAAA,aAAa,EAAE,EAJN;AAKTC,IAAAA,iBAAiB,EAAE,EALV;AAMTC,IAAAA,UAAU,EAAE5B,MAAM,CAAC6B,WAAP,GAAqB,EAArB,GAA0B;AAN7B,GADoB;AAS/BjB,EAAAA,aAAa,kCACRX,MAAM,CAAC6B,KADC;AAEXP,IAAAA,UAAU,EAAE,QAFD;AAGXE,IAAAA,cAAc,EAAE;AAHL,IATkB;AAc/BZ,EAAAA,IAAI,kCACCZ,MAAM,CAAC8B,iBADR;AAEFC,IAAAA,KAAK,EAAEjC,MAAM,CAACW,KAFZ;AAGFuB,IAAAA,SAAS,EAAE;AAHT,IAd2B;AAmB/BxB,EAAAA,IAAI,kCACCR,MAAM,CAACa,KADR;AAEFS,IAAAA,UAAU,EAAE;AAFV;AAnB2B,CAAlB,CAAf;AAyBA,eAAe3B,cAAc,CAACO,YAAD,CAA7B","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { withNavigation } from 'react-navigation';\nimport { BlurView } from 'expo-blur';\nimport { Feather } from '@expo/vector-icons';\nimport { colors, device, gStyle } from '../constants';\n\n// components\nimport TouchIcon from './TouchIcon';\n\nconst ScreenHeader = ({ navigation, showBack, title }) => (\n  <BlurView tint=\"dark\" intensity={95} style={styles.container}>\n    {showBack && (\n      <View style={styles.left}>\n        <TouchIcon\n          icon={<Feather color={colors.white} name=\"chevron-left\" />}\n          onPress={() => navigation.goBack(null)}\n        />\n      </View>\n    )}\n\n    <View style={styles.containerText}>\n      <Text style={styles.text}>{title}</Text>\n    </View>\n\n    {showBack && <View style={gStyle.flex1} />}\n  </BlurView>\n);\n\nScreenHeader.defaultProps = {\n  showBack: false\n};\n\nScreenHeader.propTypes = {\n  // required\n  navigation: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n\n  // optional\n  showBack: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 16,\n    paddingHorizontal: 24,\n    paddingTop: device.iPhoneNotch ? 48 : 24\n  },\n  containerText: {\n    ...gStyle.flex5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    ...gStyle.textSpotifyBold16,\n    color: colors.white,\n    textAlign: 'center'\n  },\n  left: {\n    ...gStyle.flex1,\n    alignItems: 'flex-start'\n  }\n});\n\nexport default withNavigation(ScreenHeader);\n"]},"metadata":{},"sourceType":"module"}