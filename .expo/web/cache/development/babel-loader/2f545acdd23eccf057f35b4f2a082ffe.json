{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withNavigation } from 'react-navigation';\nimport { colors, gStyle, images } from \"../constants\";\n\nvar AlbumsHorizontal = function AlbumsHorizontal(_ref) {\n  var data = _ref.data,\n      heading = _ref.heading,\n      navigation = _ref.navigation,\n      tagline = _ref.tagline;\n  return React.createElement(View, {\n    style: styles.container\n  }, heading && React.createElement(Text, {\n    style: styles.heading\n  }, heading), tagline && React.createElement(Text, {\n    style: styles.tagline\n  }, tagline), React.createElement(FlatList, {\n    contentContainerStyle: styles.containerContent,\n    data: data,\n    horizontal: true,\n    keyExtractor: function keyExtractor(_ref2) {\n      var id = _ref2.id;\n      return id.toString();\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: gStyle.activeOpacity,\n        hitSlop: {\n          top: 10,\n          left: 10,\n          bottom: 10,\n          right: 10\n        },\n        onPress: function onPress() {\n          return navigation.navigate('Album', {\n            title: item.title\n          });\n        },\n        style: styles.item\n      }, React.createElement(View, {\n        style: styles.image\n      }, item.image && React.createElement(Image, {\n        source: images[item.image],\n        style: styles.image\n      })), React.createElement(Text, {\n        style: styles.title\n      }, item.title));\n    },\n    showsHorizontalScrollIndicator: false\n  }));\n};\n\nAlbumsHorizontal.defaultProps = {\n  heading: null,\n  tagline: null\n};\nAlbumsHorizontal.propTypes = {\n  data: PropTypes.array.isRequired,\n  navigation: PropTypes.object.isRequired,\n  heading: PropTypes.string,\n  tagline: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 32,\n    width: '100%'\n  },\n  containerContent: {\n    paddingLeft: 16\n  },\n  heading: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold18), {}, {\n    color: colors.white,\n    paddingBottom: 6,\n    textAlign: 'center'\n  }),\n  tagline: _objectSpread(_objectSpread({}, gStyle.textSpotify12), {}, {\n    color: colors.greyInactive,\n    paddingBottom: 6,\n    textAlign: 'center'\n  }),\n  item: {\n    marginRight: 16,\n    width: 148\n  },\n  image: {\n    backgroundColor: colors.greyLight,\n    height: 148,\n    width: 148\n  },\n  title: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold12), {}, {\n    color: colors.white,\n    marginTop: 4,\n    textAlign: 'center'\n  })\n});\nexport default withNavigation(AlbumsHorizontal);","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/components/AlbumsHorizontal.js"],"names":["React","PropTypes","withNavigation","colors","gStyle","images","AlbumsHorizontal","data","heading","navigation","tagline","styles","container","containerContent","id","toString","item","activeOpacity","top","left","bottom","right","navigate","title","image","defaultProps","propTypes","array","isRequired","object","string","StyleSheet","create","marginBottom","width","paddingLeft","textSpotifyBold18","color","white","paddingBottom","textAlign","textSpotify12","greyInactive","marginRight","backgroundColor","greyLight","height","textSpotifyBold12","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FlatList,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\nimport { withNavigation } from 'react-navigation';\nimport { colors, gStyle, images } from '../constants';\n\nconst AlbumsHorizontal = ({ data, heading, navigation, tagline }) => (\n  <View style={styles.container}>\n    {heading && <Text style={styles.heading}>{heading}</Text>}\n    {tagline && <Text style={styles.tagline}>{tagline}</Text>}\n\n    <FlatList\n      contentContainerStyle={styles.containerContent}\n      data={data}\n      horizontal\n      keyExtractor={({ id }) => id.toString()}\n      renderItem={({ item }) => (\n        <TouchableOpacity\n          activeOpacity={gStyle.activeOpacity}\n          hitSlop={{ top: 10, left: 10, bottom: 10, right: 10 }}\n          onPress={() => navigation.navigate('Album', { title: item.title })}\n          style={styles.item}\n        >\n          <View style={styles.image}>\n            {item.image && (\n              <Image source={images[item.image]} style={styles.image} />\n            )}\n          </View>\n          <Text style={styles.title}>{item.title}</Text>\n        </TouchableOpacity>\n      )}\n      showsHorizontalScrollIndicator={false}\n    />\n  </View>\n);\n\nAlbumsHorizontal.defaultProps = {\n  heading: null,\n  tagline: null\n};\n\nAlbumsHorizontal.propTypes = {\n  // required\n  data: PropTypes.array.isRequired,\n  navigation: PropTypes.object.isRequired,\n\n  // optional\n  heading: PropTypes.string,\n  tagline: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 32,\n    width: '100%'\n  },\n  containerContent: {\n    paddingLeft: 16\n  },\n  heading: {\n    ...gStyle.textSpotifyBold18,\n    color: colors.white,\n    paddingBottom: 6,\n    textAlign: 'center'\n  },\n  tagline: {\n    ...gStyle.textSpotify12,\n    color: colors.greyInactive,\n    paddingBottom: 6,\n    textAlign: 'center'\n  },\n  item: {\n    marginRight: 16,\n    width: 148\n  },\n  image: {\n    backgroundColor: colors.greyLight,\n    height: 148,\n    width: 148\n  },\n  title: {\n    ...gStyle.textSpotifyBold12,\n    color: colors.white,\n    marginTop: 4,\n    textAlign: 'center'\n  }\n});\n\nexport default withNavigation(AlbumsHorizontal);\n"]},"metadata":{},"sourceType":"module"}