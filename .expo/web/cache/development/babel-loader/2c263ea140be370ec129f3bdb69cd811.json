{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather, Entypo, MaterialIcons, MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons';\nimport { colors, gStyle } from \"../constants\";\n\nvar LineItemCategory = function LineItemCategory(_ref) {\n  var icon = _ref.icon,\n      onPress = _ref.onPress,\n      title = _ref.title,\n      disableRightSide = _ref.disableRightSide,\n      iconLibrary = _ref.iconLibrary;\n  var iconDisplay;\n\n  switch (iconLibrary) {\n    default:\n    case 'Feather':\n      iconDisplay = React.createElement(Feather, {\n        color: colors.greyInactive,\n        name: icon,\n        size: 24\n      });\n      break;\n\n    case 'Entypo':\n      iconDisplay = React.createElement(Entypo, {\n        color: colors.greyInactive,\n        name: icon,\n        size: 24\n      });\n      break;\n\n    case 'MaterialIcons':\n      iconDisplay = React.createElement(MaterialIcons, {\n        color: colors.greyInactive,\n        name: icon,\n        size: 24\n      });\n      break;\n\n    case 'MaterialCommunityIcons':\n      iconDisplay = React.createElement(MaterialCommunityIcons, {\n        color: colors.greyInactive,\n        name: icon,\n        size: 24\n      });\n      break;\n\n    case 'FontAwesome':\n      iconDisplay = React.createElement(FontAwesome, {\n        color: colors.greyInactive,\n        name: icon,\n        size: 24\n      });\n      break;\n  }\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: gStyle.activeOpacity,\n    onPress: onPress,\n    style: styles.container\n  }, React.createElement(View, {\n    style: gStyle.flexRowCenterAlign\n  }, iconDisplay, React.createElement(Text, {\n    style: styles.title\n  }, title)), disableRightSide ? null : React.createElement(View, {\n    style: styles.containerRight\n  }, React.createElement(Feather, {\n    color: colors.greyInactive,\n    name: \"chevron-right\",\n    size: 20\n  })));\n};\n\nLineItemCategory.defaultProps = {\n  disableRightSide: null,\n  iconLibrary: 'Feather'\n};\nLineItemCategory.propTypes = {\n  icon: PropTypes.string.isRequired,\n  onPress: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  disableRightSide: PropTypes.bool,\n  iconLibrary: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    width: '100%'\n  },\n  title: _objectSpread(_objectSpread({}, gStyle.textSpotify14), {}, {\n    color: colors.white,\n    marginLeft: 16\n  }),\n  containerRight: {\n    alignItems: 'flex-end',\n    flex: 1\n  }\n});\nexport default LineItemCategory;","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/components/LineItemCategory.js"],"names":["React","PropTypes","Feather","Entypo","MaterialIcons","MaterialCommunityIcons","FontAwesome","colors","gStyle","LineItemCategory","icon","onPress","title","disableRightSide","iconLibrary","iconDisplay","greyInactive","activeOpacity","styles","container","flexRowCenterAlign","containerRight","defaultProps","propTypes","string","isRequired","func","bool","oneOfType","StyleSheet","create","alignItems","flexDirection","justifyContent","paddingHorizontal","paddingVertical","width","textSpotify14","color","white","marginLeft","flex"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,SACEC,OADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,sBAJF,EAKEC,WALF,QAMO,oBANP;AAOA,SAASC,MAAT,EAAiBC,MAAjB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAMnB;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,gBAEI,QAFJA,gBAEI;AAAA,MADJC,WACI,QADJA,WACI;AACJ,MAAIC,WAAJ;;AAEA,UAAQD,WAAR;AACE;AACA,SAAK,SAAL;AACEC,MAAAA,WAAW,GACT,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAER,MAAM,CAACS,YAAvB;AAAqC,QAAA,IAAI,EAAEN,IAA3C;AAAiD,QAAA,IAAI,EAAE;AAAvD,QADF;AAGA;;AACF,SAAK,QAAL;AACEK,MAAAA,WAAW,GACT,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAER,MAAM,CAACS,YAAtB;AAAoC,QAAA,IAAI,EAAEN,IAA1C;AAAgD,QAAA,IAAI,EAAE;AAAtD,QADF;AAGA;;AACF,SAAK,eAAL;AACEK,MAAAA,WAAW,GACT,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAER,MAAM,CAACS,YAA7B;AAA2C,QAAA,IAAI,EAAEN,IAAjD;AAAuD,QAAA,IAAI,EAAE;AAA7D,QADF;AAGA;;AACF,SAAK,wBAAL;AACEK,MAAAA,WAAW,GACT,oBAAC,sBAAD;AACE,QAAA,KAAK,EAAER,MAAM,CAACS,YADhB;AAEE,QAAA,IAAI,EAAEN,IAFR;AAGE,QAAA,IAAI,EAAE;AAHR,QADF;AAOA;;AACF,SAAK,aAAL;AACEK,MAAAA,WAAW,GACT,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAER,MAAM,CAACS,YAA3B;AAAyC,QAAA,IAAI,EAAEN,IAA/C;AAAqD,QAAA,IAAI,EAAE;AAA3D,QADF;AAGA;AA9BJ;;AAiCA,SACE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAEF,MAAM,CAACS,aADxB;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,KAAK,EAAEO,MAAM,CAACC;AAHhB,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY;AAApB,KACGL,WADH,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACN;AAApB,KAA4BA,KAA5B,CAFF,CALF,EAUGC,gBAAgB,GAAG,IAAH,GACf,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACG;AAApB,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEd,MAAM,CAACS,YAAvB;AAAqC,IAAA,IAAI,EAAC,eAA1C;AAA0D,IAAA,IAAI,EAAE;AAAhE,IADF,CAXJ,CADF;AAkBD,CA5DD;;AA8DAP,gBAAgB,CAACa,YAAjB,GAAgC;AAC9BT,EAAAA,gBAAgB,EAAE,IADY;AAE9BC,EAAAA,WAAW,EAAE;AAFiB,CAAhC;AAKAL,gBAAgB,CAACc,SAAjB,GAA6B;AAE3Bb,EAAAA,IAAI,EAAET,SAAS,CAACuB,MAAV,CAAiBC,UAFI;AAG3Bd,EAAAA,OAAO,EAAEV,SAAS,CAACyB,IAAV,CAAeD,UAHG;AAI3Bb,EAAAA,KAAK,EAAEX,SAAS,CAACuB,MAAV,CAAiBC,UAJG;AAO3BZ,EAAAA,gBAAgB,EAAEZ,SAAS,CAAC0B,IAPD;AAQ3Bb,EAAAA,WAAW,EAAEb,SAAS,CAAC2B,SAAV,CAAoB,CAAC3B,SAAS,CAACuB,MAAX,EAAmBvB,SAAS,CAAC0B,IAA7B,CAApB;AARc,CAA7B;AAWA,IAAMT,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAE,eAHP;AAITC,IAAAA,iBAAiB,EAAE,EAJV;AAKTC,IAAAA,eAAe,EAAE,EALR;AAMTC,IAAAA,KAAK,EAAE;AANE,GADoB;AAS/BxB,EAAAA,KAAK,kCACAJ,MAAM,CAAC6B,aADP;AAEHC,IAAAA,KAAK,EAAE/B,MAAM,CAACgC,KAFX;AAGHC,IAAAA,UAAU,EAAE;AAHT,IAT0B;AAc/BnB,EAAAA,cAAc,EAAE;AACdU,IAAAA,UAAU,EAAE,UADE;AAEdU,IAAAA,IAAI,EAAE;AAFQ;AAde,CAAlB,CAAf;AAoBA,eAAehC,gBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport {\n  Feather,\n  Entypo,\n  MaterialIcons,\n  MaterialCommunityIcons,\n  FontAwesome\n} from '@expo/vector-icons';\nimport { colors, gStyle } from '../constants';\n\nconst LineItemCategory = ({\n  icon,\n  onPress,\n  title,\n  disableRightSide,\n  iconLibrary\n}) => {\n  let iconDisplay;\n\n  switch (iconLibrary) {\n    default:\n    case 'Feather':\n      iconDisplay = (\n        <Feather color={colors.greyInactive} name={icon} size={24} />\n      );\n      break;\n    case 'Entypo':\n      iconDisplay = (\n        <Entypo color={colors.greyInactive} name={icon} size={24} />\n      );\n      break;\n    case 'MaterialIcons':\n      iconDisplay = (\n        <MaterialIcons color={colors.greyInactive} name={icon} size={24} />\n      );\n      break;\n    case 'MaterialCommunityIcons':\n      iconDisplay = (\n        <MaterialCommunityIcons\n          color={colors.greyInactive}\n          name={icon}\n          size={24}\n        />\n      );\n      break;\n    case 'FontAwesome':\n      iconDisplay = (\n        <FontAwesome color={colors.greyInactive} name={icon} size={24} />\n      );\n      break;\n  }\n\n  return (\n    <TouchableOpacity\n      activeOpacity={gStyle.activeOpacity}\n      onPress={onPress}\n      style={styles.container}\n    >\n      <View style={gStyle.flexRowCenterAlign}>\n        {iconDisplay}\n        <Text style={styles.title}>{title}</Text>\n      </View>\n\n      {disableRightSide ? null : (\n        <View style={styles.containerRight}>\n          <Feather color={colors.greyInactive} name=\"chevron-right\" size={20} />\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nLineItemCategory.defaultProps = {\n  disableRightSide: null,\n  iconLibrary: 'Feather'\n};\n\nLineItemCategory.propTypes = {\n  // required\n  icon: PropTypes.string.isRequired,\n  onPress: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n\n  // optional\n  disableRightSide: PropTypes.bool,\n  iconLibrary: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    width: '100%'\n  },\n  title: {\n    ...gStyle.textSpotify14,\n    color: colors.white,\n    marginLeft: 16\n  },\n  containerRight: {\n    alignItems: 'flex-end',\n    flex: 1\n  }\n});\n\nexport default LineItemCategory;\n"]},"metadata":{},"sourceType":"module"}