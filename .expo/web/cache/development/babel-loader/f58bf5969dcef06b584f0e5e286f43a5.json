{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, device, gStyle } from \"../constants\";\nimport TouchIcon from \"./TouchIcon\";\n\nvar ModalHeader = function ModalHeader(_ref) {\n  var left = _ref.left,\n      leftPress = _ref.leftPress,\n      right = _ref.right,\n      rightPress = _ref.rightPress,\n      style = _ref.style,\n      text = _ref.text;\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, left && React.createElement(TouchIcon, {\n    icon: left,\n    onPress: leftPress,\n    style: styles.left\n  }), !left && React.createElement(View, {\n    style: styles.left\n  }), text && React.createElement(View, {\n    style: styles.containerText\n  }, React.createElement(Text, {\n    style: styles.text\n  }, text)), right && React.createElement(TouchIcon, {\n    icon: right,\n    onPress: rightPress,\n    style: styles.right\n  }), !right && React.createElement(View, {\n    style: styles.right\n  }));\n};\n\nModalHeader.defaultProps = {\n  left: null,\n  leftPress: function leftPress() {\n    return null;\n  },\n  right: null,\n  rightPress: function rightPress() {\n    return null;\n  },\n  style: {},\n  text: null\n};\nModalHeader.propTypes = {\n  left: PropTypes.element,\n  leftPress: PropTypes.func,\n  right: PropTypes.element,\n  rightPress: PropTypes.func,\n  style: PropTypes.oneOfType([PropTypes.array, PropTypes.number, PropTypes.object]),\n  text: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 24,\n    paddingTop: device.iPhoneNotch ? 48 : 24\n  },\n  containerText: {\n    alignItems: 'center',\n    flex: 5,\n    justifyContent: 'center'\n  },\n  text: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold16), {}, {\n    color: colors.white,\n    textAlign: 'center'\n  }),\n  left: {\n    alignItems: 'flex-start',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  right: {\n    alignItems: 'flex-end',\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default ModalHeader;","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/components/ModalHeader.js"],"names":["React","PropTypes","colors","device","gStyle","TouchIcon","ModalHeader","left","leftPress","right","rightPress","style","text","styles","container","containerText","defaultProps","propTypes","element","func","oneOfType","array","number","object","string","StyleSheet","create","flexDirection","justifyContent","paddingHorizontal","paddingTop","iPhoneNotch","alignItems","flex","textSpotifyBold16","color","white","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { colors, device, gStyle } from '../constants';\n\n// components\nimport TouchIcon from './TouchIcon';\n\nconst ModalHeader = ({ left, leftPress, right, rightPress, style, text }) => (\n  <View style={[styles.container, style]}>\n    {left && <TouchIcon icon={left} onPress={leftPress} style={styles.left} />}\n    {!left && <View style={styles.left} />}\n\n    {text && (\n      <View style={styles.containerText}>\n        <Text style={styles.text}>{text}</Text>\n      </View>\n    )}\n\n    {right && (\n      <TouchIcon icon={right} onPress={rightPress} style={styles.right} />\n    )}\n    {!right && <View style={styles.right} />}\n  </View>\n);\n\nModalHeader.defaultProps = {\n  left: null,\n  leftPress: () => null,\n  right: null,\n  rightPress: () => null,\n  style: {},\n  text: null\n};\n\nModalHeader.propTypes = {\n  // optional\n  left: PropTypes.element,\n  leftPress: PropTypes.func,\n  right: PropTypes.element,\n  rightPress: PropTypes.func,\n  style: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object\n  ]),\n  text: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 24,\n    paddingTop: device.iPhoneNotch ? 48 : 24\n  },\n  containerText: {\n    alignItems: 'center',\n    flex: 5,\n    justifyContent: 'center'\n  },\n  text: {\n    ...gStyle.textSpotifyBold16,\n    color: colors.white,\n    textAlign: 'center'\n  },\n  left: {\n    alignItems: 'flex-start',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  right: {\n    alignItems: 'flex-end',\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\n\nexport default ModalHeader;\n"]},"metadata":{},"sourceType":"module"}