{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather, FontAwesome, MaterialIcons } from '@expo/vector-icons';\nimport Slider from '@react-native-community/slider';\nimport { colors, device, func, gStyle, images } from \"../constants\";\nimport ModalHeader from \"../components/ModalHeader\";\nimport TouchIcon from \"../components/TouchIcon\";\n\nvar ModalMusicPlayer = function (_React$Component) {\n  _inherits(ModalMusicPlayer, _React$Component);\n\n  var _super = _createSuper(ModalMusicPlayer);\n\n  function ModalMusicPlayer() {\n    var _this;\n\n    _classCallCheck(this, ModalMusicPlayer);\n\n    _this = _super.call(this);\n    _this.state = {\n      favorited: false,\n      paused: true\n    };\n    _this.toggleFavorite = _this.toggleFavorite.bind(_assertThisInitialized(_this));\n    _this.togglePlay = _this.togglePlay.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalMusicPlayer, [{\n    key: \"toggleFavorite\",\n    value: function toggleFavorite() {\n      this.setState(function (prev) {\n        return {\n          favorited: !prev.favorited\n        };\n      });\n    }\n  }, {\n    key: \"togglePlay\",\n    value: function togglePlay() {\n      this.setState(function (prev) {\n        return {\n          paused: !prev.paused\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          screenProps = _this$props.screenProps;\n      var currentSongData = screenProps.currentSongData;\n      var _this$state = this.state,\n          favorited = _this$state.favorited,\n          paused = _this$state.paused;\n      var favoriteColor = favorited ? colors.brandPrimary : colors.white;\n      var favoriteIcon = favorited ? 'heart' : 'heart-o';\n      var iconPlay = paused ? 'play-circle' : 'pause-circle';\n      var timePast = func.formatTime(0);\n      var timeLeft = func.formatTime(currentSongData.length);\n      return React.createElement(View, {\n        style: gStyle.container\n      }, React.createElement(ModalHeader, {\n        left: React.createElement(Feather, {\n          color: colors.greyLight,\n          name: \"chevron-down\"\n        }),\n        leftPress: function leftPress() {\n          return navigation.goBack(null);\n        },\n        right: React.createElement(Feather, {\n          color: colors.greyLight,\n          name: \"more-horizontal\"\n        }),\n        text: currentSongData.album\n      }), React.createElement(View, {\n        style: gStyle.p3\n      }, React.createElement(Image, {\n        source: images[currentSongData.image],\n        style: styles.image\n      }), React.createElement(View, {\n        style: [gStyle.flexRowSpace, styles.containerDetails]\n      }, React.createElement(View, {\n        style: styles.containerSong\n      }, React.createElement(Text, {\n        ellipsizeMode: \"tail\",\n        numberOfLines: 1,\n        style: styles.song\n      }, currentSongData.title), React.createElement(Text, {\n        style: styles.artist\n      }, currentSongData.artist)), React.createElement(View, {\n        style: styles.containerFavorite\n      }, React.createElement(TouchIcon, {\n        icon: React.createElement(FontAwesome, {\n          color: favoriteColor,\n          name: favoriteIcon\n        }),\n        onPress: this.toggleFavorite\n      }))), React.createElement(View, {\n        style: styles.containerVolume\n      }, React.createElement(Slider, {\n        minimumValue: 0,\n        maximumValue: currentSongData.length,\n        minimumTrackTintColor: colors.white,\n        maximumTrackTintColor: colors.grey3\n      }), React.createElement(View, {\n        style: styles.containerTime\n      }, React.createElement(Text, {\n        style: styles.time\n      }, timePast), React.createElement(Text, {\n        style: styles.time\n      }, \"-\" + timeLeft))), React.createElement(View, {\n        style: styles.containerControls\n      }, React.createElement(TouchIcon, {\n        icon: React.createElement(Feather, {\n          color: colors.greyLight,\n          name: \"shuffle\"\n        }),\n        onPress: function onPress() {\n          return null;\n        }\n      }), React.createElement(View, {\n        style: gStyle.flexRowCenterAlign\n      }, React.createElement(TouchIcon, {\n        icon: React.createElement(FontAwesome, {\n          color: colors.white,\n          name: \"step-backward\"\n        }),\n        iconSize: 32,\n        onPress: function onPress() {\n          return null;\n        }\n      }), React.createElement(View, {\n        style: gStyle.pH3\n      }, React.createElement(TouchIcon, {\n        icon: React.createElement(FontAwesome, {\n          color: colors.white,\n          name: iconPlay\n        }),\n        iconSize: 64,\n        onPress: this.togglePlay\n      })), React.createElement(TouchIcon, {\n        icon: React.createElement(FontAwesome, {\n          color: colors.white,\n          name: \"step-forward\"\n        }),\n        iconSize: 32,\n        onPress: function onPress() {\n          return null;\n        }\n      })), React.createElement(TouchIcon, {\n        icon: React.createElement(Feather, {\n          color: colors.greyLight,\n          name: \"repeat\"\n        }),\n        onPress: function onPress() {\n          return null;\n        }\n      })), React.createElement(View, {\n        style: styles.containerBottom\n      }, React.createElement(TouchIcon, {\n        icon: React.createElement(Feather, {\n          color: colors.greyLight,\n          name: \"speaker\"\n        }),\n        onPress: function onPress() {\n          return null;\n        }\n      }), React.createElement(TouchIcon, {\n        icon: React.createElement(MaterialIcons, {\n          color: colors.greyLight,\n          name: \"playlist-play\"\n        }),\n        onPress: function onPress() {\n          return null;\n        }\n      }))));\n    }\n  }]);\n\n  return ModalMusicPlayer;\n}(React.Component);\n\nModalMusicPlayer.propTypes = {\n  navigation: PropTypes.object.isRequired,\n  screenProps: PropTypes.object.isRequired\n};\nvar styles = StyleSheet.create({\n  image: {\n    height: device.width - 48,\n    marginVertical: device.iPhoneNotch ? 36 : 8,\n    width: device.width - 48\n  },\n  containerDetails: {\n    marginBottom: 16\n  },\n  containerSong: {\n    flex: 6\n  },\n  song: _objectSpread(_objectSpread({}, gStyle.textSpotifyBold24), {}, {\n    color: colors.white\n  }),\n  artist: _objectSpread(_objectSpread({}, gStyle.textSpotify18), {}, {\n    color: colors.greyInactive\n  }),\n  containerFavorite: {\n    alignItems: 'flex-end',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  containerTime: _objectSpread({}, gStyle.flexRowSpace),\n  time: _objectSpread(_objectSpread({}, gStyle.textSpotify10), {}, {\n    color: colors.greyInactive\n  }),\n  containerControls: _objectSpread(_objectSpread({}, gStyle.flexRowSpace), {}, {\n    marginTop: device.iPhoneNotch ? 24 : 8\n  }),\n  containerBottom: _objectSpread(_objectSpread({}, gStyle.flexRowSpace), {}, {\n    marginTop: device.iPhoneNotch ? 32 : 8\n  })\n});\nexport default ModalMusicPlayer;","map":{"version":3,"sources":["/home/hlong/Desktop/expo-spotify/src/screens/ModalMusicPlayer.js"],"names":["React","PropTypes","Feather","FontAwesome","MaterialIcons","Slider","colors","device","func","gStyle","images","ModalHeader","TouchIcon","ModalMusicPlayer","state","favorited","paused","toggleFavorite","bind","togglePlay","setState","prev","props","navigation","screenProps","currentSongData","favoriteColor","brandPrimary","white","favoriteIcon","iconPlay","timePast","formatTime","timeLeft","length","container","greyLight","goBack","album","p3","image","styles","flexRowSpace","containerDetails","containerSong","song","title","artist","containerFavorite","containerVolume","grey3","containerTime","time","containerControls","flexRowCenterAlign","pH3","containerBottom","Component","propTypes","object","isRequired","StyleSheet","create","height","width","marginVertical","iPhoneNotch","marginBottom","flex","textSpotifyBold24","color","textSpotify18","greyInactive","alignItems","justifyContent","textSpotify10","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, StyleSheet, Text, View } from 'react-native';\nimport { Feather, FontAwesome, MaterialIcons } from '@expo/vector-icons';\nimport Slider from '@react-native-community/slider';\nimport { colors, device, func, gStyle, images } from '../constants';\n\n// components\nimport ModalHeader from '../components/ModalHeader';\nimport TouchIcon from '../components/TouchIcon';\n\nclass ModalMusicPlayer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      favorited: false,\n      paused: true\n    };\n\n    this.toggleFavorite = this.toggleFavorite.bind(this);\n    this.togglePlay = this.togglePlay.bind(this);\n  }\n\n  toggleFavorite() {\n    this.setState((prev) => ({\n      favorited: !prev.favorited\n    }));\n  }\n\n  togglePlay() {\n    this.setState((prev) => ({\n      paused: !prev.paused\n    }));\n  }\n\n  render() {\n    const { navigation, screenProps } = this.props;\n    const { currentSongData } = screenProps;\n    const { favorited, paused } = this.state;\n\n    const favoriteColor = favorited ? colors.brandPrimary : colors.white;\n    const favoriteIcon = favorited ? 'heart' : 'heart-o';\n    const iconPlay = paused ? 'play-circle' : 'pause-circle';\n\n    const timePast = func.formatTime(0);\n    const timeLeft = func.formatTime(currentSongData.length);\n\n    return (\n      <View style={gStyle.container}>\n        <ModalHeader\n          left={<Feather color={colors.greyLight} name=\"chevron-down\" />}\n          leftPress={() => navigation.goBack(null)}\n          right={<Feather color={colors.greyLight} name=\"more-horizontal\" />}\n          text={currentSongData.album}\n        />\n\n        <View style={gStyle.p3}>\n          <Image source={images[currentSongData.image]} style={styles.image} />\n\n          <View style={[gStyle.flexRowSpace, styles.containerDetails]}>\n            <View style={styles.containerSong}>\n              <Text ellipsizeMode=\"tail\" numberOfLines={1} style={styles.song}>\n                {currentSongData.title}\n              </Text>\n              <Text style={styles.artist}>{currentSongData.artist}</Text>\n            </View>\n            <View style={styles.containerFavorite}>\n              <TouchIcon\n                icon={<FontAwesome color={favoriteColor} name={favoriteIcon} />}\n                onPress={this.toggleFavorite}\n              />\n            </View>\n          </View>\n\n          <View style={styles.containerVolume}>\n            <Slider\n              minimumValue={0}\n              maximumValue={currentSongData.length}\n              minimumTrackTintColor={colors.white}\n              maximumTrackTintColor={colors.grey3}\n            />\n            <View style={styles.containerTime}>\n              <Text style={styles.time}>{timePast}</Text>\n              <Text style={styles.time}>{`-${timeLeft}`}</Text>\n            </View>\n          </View>\n\n          <View style={styles.containerControls}>\n            <TouchIcon\n              icon={<Feather color={colors.greyLight} name=\"shuffle\" />}\n              onPress={() => null}\n            />\n            <View style={gStyle.flexRowCenterAlign}>\n              <TouchIcon\n                icon={<FontAwesome color={colors.white} name=\"step-backward\" />}\n                iconSize={32}\n                onPress={() => null}\n              />\n              <View style={gStyle.pH3}>\n                <TouchIcon\n                  icon={<FontAwesome color={colors.white} name={iconPlay} />}\n                  iconSize={64}\n                  onPress={this.togglePlay}\n                />\n              </View>\n              <TouchIcon\n                icon={<FontAwesome color={colors.white} name=\"step-forward\" />}\n                iconSize={32}\n                onPress={() => null}\n              />\n            </View>\n            <TouchIcon\n              icon={<Feather color={colors.greyLight} name=\"repeat\" />}\n              onPress={() => null}\n            />\n          </View>\n\n          <View style={styles.containerBottom}>\n            <TouchIcon\n              icon={<Feather color={colors.greyLight} name=\"speaker\" />}\n              onPress={() => null}\n            />\n            <TouchIcon\n              icon={\n                <MaterialIcons color={colors.greyLight} name=\"playlist-play\" />\n              }\n              onPress={() => null}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nModalMusicPlayer.propTypes = {\n  // required\n  navigation: PropTypes.object.isRequired,\n  screenProps: PropTypes.object.isRequired\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    height: device.width - 48,\n    marginVertical: device.iPhoneNotch ? 36 : 8,\n    width: device.width - 48\n  },\n  containerDetails: {\n    marginBottom: 16\n  },\n  containerSong: {\n    flex: 6\n  },\n  song: {\n    ...gStyle.textSpotifyBold24,\n    color: colors.white\n  },\n  artist: {\n    ...gStyle.textSpotify18,\n    color: colors.greyInactive\n  },\n  containerFavorite: {\n    alignItems: 'flex-end',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  containerTime: {\n    ...gStyle.flexRowSpace\n  },\n  time: {\n    ...gStyle.textSpotify10,\n    color: colors.greyInactive\n  },\n  containerControls: {\n    ...gStyle.flexRowSpace,\n    marginTop: device.iPhoneNotch ? 24 : 8\n  },\n  containerBottom: {\n    ...gStyle.flexRowSpace,\n    marginTop: device.iPhoneNotch ? 32 : 8\n  }\n});\n\nexport default ModalMusicPlayer;\n"]},"metadata":{},"sourceType":"module"}